#load this along with either the dev or prod override files

version: "3.9"

services:

  client:
    build: client
    image: 5050.ni.bbc.co.uk:8443/5050-client-dev:latest
    dns:
      - 127.0.0.11
    networks:
      - private
    depends_on:
      - api
    deploy:
      mode: global
      endpoint_mode: dnsrr
    logging:
      driver: "awslogs"
      options:
        mode: non-blocking
        awslogs-region: "eu-west-2"
        awslogs-group: "5050LogGroup"
        awslogs-force-flush-interval-seconds: 60
        tag: "{{.Name}}"

  api:
    build: api
    image: 5050.ni.bbc.co.uk:8443/5050-api-dev:latest
    networks:
      - private
    environment:
      - rt_db_name=rt
      - rt_db_host=5050_db
      - rt_db_user=postgres
      - rt_debug=True
      - GUNICORN_WORKERS=32
      - TASK_SLOT={{.Task.Slot}}
    secrets:
      - ni-app-tig.keytab
      - rt_app_account_pw
      - rt_db_pw
      - rt_secret
      - source: 5050-aws-credentials
        target: /root/.aws/credentials
        mode: 400
    depends_on:
      - db
    dns: [ 127.0.0.11, 10.68.140.2 ]
    deploy:
      mode: global
      endpoint_mode: dnsrr
    logging:
      driver: "awslogs"
      options:
        mode: non-blocking
        awslogs-region: "eu-west-2"
        awslogs-group: "5050LogGroup"
        awslogs-force-flush-interval-seconds: 60
        tag: "{{.Name}}"

  db:
    image: postgres:13.6
    networks:
      - private
    environment:
      - POSTGRES_DB=rt
      - POSTGRES_PASSWORD_FILE=/run/secrets/rt_db_pw
    secrets:
      - rt_db_pw
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.postgres==true"
    logging:
      driver: "awslogs"
      options:
        mode: non-blocking
        awslogs-region: "eu-west-2"
        awslogs-group: "5050LogGroup"
        awslogs-force-flush-interval-seconds: 60
        tag: "{{.Name}}"

  backup:
    build: backup-service
    image: 5050.ni.bbc.co.uk:8443/5050-backup-dev:latest
    environment:
      - rt_debug=True
    secrets:
      - rt_db_pw
      - source: 5050-aws-credentials
        target: /root/.aws/credentials
        mode: 400
    deploy:
      mode: global
      placement:
        constraints:
          - "node.labels.postgres==true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: "awslogs"
      options:
        mode: non-blocking
        awslogs-region: "eu-west-2"
        awslogs-group: "5050LogGroup"
        awslogs-force-flush-interval-seconds: 60
        tag: "{{.Name}}"

secrets:
  rt_db_pw:
    external: true
  ni-app-tig.keytab:
    external: true
  rt_app_account_pw:
    external: true
  rt_secret:
    external: true
  5050-aws-credentials:
    external: true

networks:
  private:
    driver: overlay

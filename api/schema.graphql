schema {
  query: Query
  mutation: Mutation
}

scalar Date

type Organization {
  id: ID!
  name: String!
  teams: [Team!]!
}

type Team {
  id: ID!
  name: String!
  users: [User!]!
  programs: [Program!]!
  organizations: [Organization!]!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  role: Role!
  teams: [Team!]!
}

type Role {
  id: ID!
  name: String!
  description: String!
}

type Program {
  id: ID!
  description: String!
  team: Team!
  datasets: [Dataset!]!
  targets: [Target!]!
  tags: [Tag!]!
}

type Tag {
  id: ID!
  name: String!
  description: String
  tagType: String!
  programs: [Program!]!
  dataset: [Dataset!]!
}

input TagInput {
  name: String!
  description: String
  tagType: String!
}

type Target {
  id: ID!
  program: Program!
  category: String!
  categoryValue: String!
  target: Float!
}

type Dataset {
  id: ID!
  name: String!
  description: String
  program: Program!
  records: [Record!]!
  inputter: User!
  tags: [Tag!]!
}

# TODO checkin: shouldn't records be the ones flagged with inputter vs datasets
type Record {
  id: ID!
  dataset: Dataset!
  publicationDate: Date
  category: String!
  categoryValue: String!
  count: Int!
}

input UpsertUserInput {
  id: ID
  firstName: String!
  lastName: String!
  email: String!
  role: String!
}

input CreateDatasetInput {
  name: String!
  description: String!
  programId: ID!
  inputterId: ID!
  tags: [TagInput!]!
}

type Query {
  # Retrieve a single user.
  user(id: ID!): User
}

type Mutation {
  # Upsert a user.
  upsertUser(input: UpsertUserInput): User!

  # Delete a user.
  deleteUser(id: ID!): Int!

  # Add a Dataset
  createDataset(input: CreateDatasetInput): Dataset!
}

version: "3.9"

services:
  # Python API service
  api:
    build: api
    image: scpl/rt-api:latest
    networks:
      - private
      - frontend
    expose:
      - 8000
    environment:
      - db_name=${RT_DB_NAME}
      - db_host=db
    secrets:
      - source: db-password
        target: /run/secrets/db_pw
        mode: 0400
      - source: app-secret
        target: /run/secrets/secret
        mode: 0400
    depends_on:
      - db
      - api_init

  # Python first-time API init script
  api_init:
    build: api
    image: scpl/rt-api:latest
    networks:
      - private
    environment:
      - db_name=${RT_DB_NAME}
      - db_host=db
      - RT_DUMMY_DATA=${RT_DUMMY_DATA}
    secrets:
      - source: db-password
        target: /run/secrets/db_pw
        mode: 0400
      - source: app-secret
        target: /run/secrets/secret
        mode: 0400
    depends_on:
      - db
    restart: "no"
    entrypoint: [ "./docker-api-init.sh" ]

  # Typescript assets
  static:
    restart: always
    build: client
    image: scpl/rt-client:latest
    volumes:
      - staticFiles:/www

  # nginx reverse-proxy
  nginx:
    image: nginx:1.20
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - staticFiles:/www:ro
    ports:
      - 80:80
    networks:
      - frontend
    depends_on:
      - static
      - api

  # Postgres database
  db:
    image: postgres:13.2
    restart: always
    environment:
      - POSTGRES_DB=${RT_DB_NAME}
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    secrets:
      - db-password
    expose:
      - 5432
    networks:
      - private

volumes:
  # Volume to share static assets from TS container to nginx
  staticFiles:

secrets:
  # Database password
  db-password:
    file: ${RT_DB_PW_FILE}
  # FastAPI app secret
  app-secret:
    file: ${RT_APP_SECRET_FILE}

networks:
  private:
  frontend:
